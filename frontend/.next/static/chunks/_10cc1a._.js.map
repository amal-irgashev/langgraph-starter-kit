{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/contexts/ThreadContext.tsx"],"sourcesContent":["'use client';\n\nimport { createContext, useContext, useState, ReactNode, useEffect } from 'react';\nimport { PostgresSaver } from '@langchain/langgraph-checkpoint-postgres';\n\ninterface Thread {\n  id: string;\n  title: string;\n  lastMessage?: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\ninterface ThreadContextType {\n  threads: Thread[];\n  currentThreadId: string | null;\n  setCurrentThreadId: (id: string | null) => void;\n  addThread: (thread: Thread) => void;\n  updateThread: (id: string, updates: Partial<Thread>) => void;\n  deleteThread: (id: string) => void;\n  checkpointer: PostgresSaver | null;\n}\n\nconst ThreadContext = createContext<ThreadContextType | undefined>(undefined);\n\ninterface ThreadProviderProps {\n  children: ReactNode;\n  connectionString?: string;\n}\n\nexport function ThreadProvider({ children, connectionString }: ThreadProviderProps) {\n  const [threads, setThreads] = useState<Thread[]>([]);\n  const [currentThreadId, setCurrentThreadId] = useState<string | null>(null);\n  const [checkpointer, setCheckpointer] = useState<PostgresSaver | null>(null);\n\n  useEffect(() => {\n    if (connectionString) {\n      const initializeCheckpointer = async () => {\n        try {\n          const checkpointer = PostgresSaver.fromConnString(connectionString);\n          await checkpointer.setup();\n          setCheckpointer(checkpointer);\n        } catch (error) {\n          console.error('Failed to initialize checkpointer:', error);\n        }\n      };\n      initializeCheckpointer();\n    }\n  }, [connectionString]);\n\n  const addThread = (thread: Thread) => {\n    setThreads(prev => [...prev, thread]);\n  };\n\n  const updateThread = (id: string, updates: Partial<Thread>) => {\n    setThreads(prev => prev.map(thread => \n      thread.id === id ? { ...thread, ...updates, updatedAt: new Date() } : thread\n    ));\n  };\n\n  const deleteThread = (id: string) => {\n    setThreads(prev => prev.filter(thread => thread.id !== id));\n  };\n\n  const value = {\n    threads,\n    currentThreadId,\n    setCurrentThreadId,\n    addThread,\n    updateThread,\n    deleteThread,\n    checkpointer\n  };\n\n  return (\n    <ThreadContext.Provider value={value}>\n      {children}\n    </ThreadContext.Provider>\n  );\n}\n\nexport function useThread() {\n  const context = useContext(ThreadContext);\n  if (!context) {\n    throw new Error('useThread must be used within a ThreadProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;;;;AAFA;;;AAuBA,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAiC;AAO5D,SAAS,eAAe,EAAE,QAAQ,EAAE,gBAAgB,EAAuB;;IAChF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACnD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACtE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAwB;IAEvE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,IAAI,kBAAkB;gBACpB,MAAM;uEAAyB;wBAC7B,IAAI;4BACF,MAAM,eAAe,cAAc,cAAc,CAAC;4BAClD,MAAM,aAAa,KAAK;4BACxB,gBAAgB;wBAClB,EAAE,OAAO,OAAO;4BACd,QAAQ,KAAK,CAAC,sCAAsC;wBACtD;oBACF;;gBACA;YACF;QACF;mCAAG;QAAC;KAAiB;IAErB,MAAM,YAAY,CAAC;QACjB,WAAW,CAAA,OAAQ;mBAAI;gBAAM;aAAO;IACtC;IAEA,MAAM,eAAe,CAAC,IAAY;QAChC,WAAW,CAAA,OAAQ,KAAK,GAAG,CAAC,CAAA,SAC1B,OAAO,EAAE,KAAK,KAAK;oBAAE,GAAG,MAAM;oBAAE,GAAG,OAAO;oBAAE,WAAW,IAAI;gBAAO,IAAI;IAE1E;IAEA,MAAM,eAAe,CAAC;QACpB,WAAW,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,SAAU,OAAO,EAAE,KAAK;IACzD;IAEA,MAAM,QAAQ;QACZ;QACA;QACA;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,6LAAC,cAAc,QAAQ;QAAC,OAAO;kBAC5B;;;;;;AAGP;GAjDgB;KAAA;AAmDT,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/hooks/useChatActions.ts"],"sourcesContent":["'use client';\n\nimport { useClient } from '../contexts/ClientContext';\nimport { useChat } from '../contexts/ChatContext';\nimport { useThread } from '../contexts/ThreadContext';\nimport { useCallback, useEffect, useState } from 'react';\nimport { \n  Message, \n  MessageTuple, \n  StreamPayload, \n  MessageChunk, \n  LangGraphMessage,\n  MessageMetadata,\n  ValuesEvent \n} from '@/types/chat';\n\nexport function useChatActions() {\n  const client = useClient();\n  const { addMessage, addRawMessage, clearRawMessages, setIsLoading, setStreamingContent } = useChat();\n  const { currentThreadId, checkpointer, addThread, updateThread } = useThread();\n  const [assistantId, setAssistantId] = useState<string | null>(null);\n\n  // Initialize thread and assistant on component mount\n  useEffect(() => {\n    async function init() {\n      if (!client) return;\n      \n      try {\n        // Create a new thread if none exists\n        if (!currentThreadId) {\n          const thread = await client.threads.create();\n          addThread({\n            id: thread.thread_id,\n            title: 'New Chat',\n            createdAt: new Date(),\n            updatedAt: new Date()\n          });\n        }\n\n        // Get the first available assistant\n        const assistants = await client.assistants.search();\n        if (assistants.length > 0) {\n          setAssistantId(assistants[0].assistant_id);\n        } else {\n          console.error('No assistants available');\n        }\n      } catch (error) {\n        console.error('Error initializing chat:', error);\n      }\n    }\n\n    init();\n  }, [client, currentThreadId, addThread]);\n\n  const sendMessage = useCallback(async (content: string) => {\n    if (!content.trim() || !client || !currentThreadId || !assistantId) return;\n\n    // Add user message\n    const userMessage: Message = {\n      role: 'user',\n      content\n    };\n    addMessage(userMessage);\n    setIsLoading(true);\n    clearRawMessages(); // Clear previous raw messages\n\n    try {\n      // Create the stream with messages-tuple mode\n      const stream = await client.runs.stream(currentThreadId, assistantId, {\n        input: {\n          messages: [userMessage]\n        },\n        streamMode: \"messages-tuple\"\n      } as StreamPayload);\n\n      let currentContent = '';\n      let isComplete = false;\n\n      // Process the stream\n      for await (const chunk of stream) {\n        // Store raw message for debugging\n        addRawMessage({\n          event: chunk.event,\n          data: chunk.data\n        });\n\n        // Handle different event types\n        if (chunk.event === 'metadata') {\n          // Run started\n          console.log('Run started:', chunk.data);\n        } else if (chunk.event === 'messages') {\n          const [message, metadata] = chunk.data as MessageTuple;\n          \n          if (message.type === 'AIMessageChunk') {\n            // Handle content which can be either string or array of chunks\n            let newContent = '';\n            if (Array.isArray(message.content)) {\n              // Content is an array of text chunks\n              newContent = message.content.map((c: { text: string }) => c.text).join('');\n            } else {\n              // Content is a string\n              newContent = message.content;\n            }\n\n            // Only append if we have new content\n            if (newContent.trim()) {\n              currentContent += newContent;\n              setStreamingContent(currentContent);\n            }\n\n            // Check for completion\n            if (message.response_metadata?.finish_reason === 'stop' || \n                (metadata.langgraph_node === 'agent' && !message.tool_calls)) {\n              isComplete = true;\n            }\n\n            // Save checkpoint if available\n            if (checkpointer && metadata.checkpoint) {\n              await checkpointer.save({\n                configurable: { thread_id: currentThreadId },\n                ...metadata.checkpoint\n              });\n            }\n          } else if (message.type === 'tool') {\n            // Handle tool response if needed\n            console.log('Tool response:', message.content);\n          }\n        }\n      }\n\n      // After the stream is done, if we have content and it's complete, add it as a message\n      if (currentContent && isComplete) {\n        const assistantMessage = {\n          role: 'assistant',\n          content: currentContent\n        };\n        addMessage(assistantMessage);\n        \n        // Update thread with last message\n        updateThread(currentThreadId, {\n          lastMessage: currentContent,\n          updatedAt: new Date()\n        });\n      }\n      setStreamingContent('');\n      \n    } catch (error) {\n      console.error('Error sending message:', error);\n      addMessage({\n        role: 'assistant',\n        content: 'Sorry, there was an error processing your message. Please try again.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [client, currentThreadId, assistantId, addMessage, addRawMessage, clearRawMessages, setIsLoading, setStreamingContent, checkpointer, updateThread]);\n\n  const ready = Boolean(client && currentThreadId && assistantId);\n\n  return {\n    sendMessage,\n    ready,\n    threadId: currentThreadId,\n    assistantId\n  };\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-neutral-950 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:focus-visible:ring-neutral-300\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-neutral-900 text-neutral-50 shadow hover:bg-neutral-900/90 dark:bg-neutral-50 dark:text-neutral-900 dark:hover:bg-neutral-50/90\",\n        destructive:\n          \"bg-red-500 text-neutral-50 shadow-sm hover:bg-red-500/90 dark:bg-red-900 dark:text-neutral-50 dark:hover:bg-red-900/90\",\n        outline:\n          \"border border-neutral-200 bg-white shadow-sm hover:bg-neutral-100 hover:text-neutral-900 dark:border-neutral-800 dark:bg-neutral-950 dark:hover:bg-neutral-800 dark:hover:text-neutral-50\",\n        secondary:\n          \"bg-neutral-100 text-neutral-900 shadow-sm hover:bg-neutral-100/80 dark:bg-neutral-800 dark:text-neutral-50 dark:hover:bg-neutral-800/80\",\n        ghost: \"hover:bg-neutral-100 hover:text-neutral-900 dark:hover:bg-neutral-800 dark:hover:text-neutral-50\",\n        link: \"text-neutral-900 underline-offset-4 hover:underline dark:text-neutral-50\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,oVACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 370, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/components/chat/chat-thread.tsx"],"sourcesContent":["'use client';\n\nimport { MessageSquare, Plus } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\n\ninterface Thread {\n  id: string;\n  title: string;\n  lastMessage: string;\n  timestamp: string;\n}\n\ninterface ChatThreadProps {\n  threads: Thread[];\n  onNewChat: () => void;\n  onSelectThread: (threadId: string) => void;\n  activeThreadId?: string;\n}\n\nexport function ChatThread({ threads, onNewChat, onSelectThread, activeThreadId }: ChatThreadProps) {\n  return (\n    <div className=\"w-[300px] h-full bg-[#141414] border-r border-[#262626] flex flex-col\">\n      <div className=\"p-4\">\n        <Button \n          onClick={onNewChat}\n          className=\"w-full justify-start gap-2 bg-[#262626] hover:bg-[#333333] text-white\"\n          variant=\"ghost\"\n        >\n          <Plus className=\"w-4 h-4\" />\n          New Chat\n        </Button>\n      </div>\n\n      <div className=\"flex-1 overflow-auto\">\n        {threads.map((thread) => (\n          <button\n            key={thread.id}\n            onClick={() => onSelectThread(thread.id)}\n            className={cn(\n              \"w-full p-3 text-left transition-colors flex items-start gap-3\",\n              \"hover:bg-[#262626]\",\n              activeThreadId === thread.id ? \"bg-[#262626]\" : \"bg-transparent\"\n            )}\n          >\n            <div className=\"w-5 h-5 mt-1 flex-shrink-0\">\n              <MessageSquare className=\"w-full h-full text-gray-400\" />\n            </div>\n            <div className=\"flex-1 min-w-0 text-sm\">\n              <p className=\"text-gray-200 truncate\">\n                {thread.title}\n              </p>\n              <p className=\"text-gray-500 text-xs truncate mt-0.5\">\n                {thread.lastMessage}\n              </p>\n              <p className=\"text-gray-600 text-xs mt-1\">\n                {thread.timestamp}\n              </p>\n            </div>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAGA;AACA;AAFA;AAAA;AAFA;;;;;AAoBO,SAAS,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,cAAc,EAAE,cAAc,EAAmB;IAChG,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,8HAAA,CAAA,SAAM;oBACL,SAAS;oBACT,WAAU;oBACV,SAAQ;;sCAER,6LAAC,qMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;wBAAY;;;;;;;;;;;;0BAKhC,6LAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,uBACZ,6LAAC;wBAEC,SAAS,IAAM,eAAe,OAAO,EAAE;wBACvC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iEACA,sBACA,mBAAmB,OAAO,EAAE,GAAG,iBAAiB;;0CAGlD,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,2NAAA,CAAA,gBAAa;oCAAC,WAAU;;;;;;;;;;;0CAE3B,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAE,WAAU;kDACV,OAAO,KAAK;;;;;;kDAEf,6LAAC;wCAAE,WAAU;kDACV,OAAO,WAAW;;;;;;kDAErB,6LAAC;wCAAE,WAAU;kDACV,OAAO,SAAS;;;;;;;;;;;;;uBAnBhB,OAAO,EAAE;;;;;;;;;;;;;;;;AA2B1B;KA5CgB"}},
    {"offset": {"line": 496, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 502, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/components/chat/chat-window.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { Send, User, Bot, Loader2 } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Message } from '@/types/chat';\nimport { useChat } from '@/contexts/ChatContext';\nimport ReactMarkdown from 'react-markdown';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { cn } from '@/lib/utils';\n\ninterface ChatWindowProps {\n  messages: Message[];\n  isLoading: boolean;\n  onSendMessage: (message: string) => void;\n}\n\nconst messageVariants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: { opacity: 1, y: 0 },\n  exit: { opacity: 0, x: -100 }\n};\n\nexport function ChatWindow({ messages, isLoading, onSendMessage }: ChatWindowProps) {\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const { streamingContent } = useChat();\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, streamingContent]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n    onSendMessage(input);\n    setInput('');\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-gradient-to-b from-[#1A1A1A] to-[#141414]\">\n      {/* Messages Area */}\n      <div className=\"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-[#262626] scrollbar-track-transparent\">\n        <div className=\"max-w-3xl mx-auto p-4 space-y-6\">\n          <AnimatePresence initial={false}>\n            {messages.map((message, index) => (\n              <motion.div\n                key={index}\n                variants={messageVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ duration: 0.3 }}\n                className=\"group\"\n              >\n                <div className=\"flex items-start gap-4 rounded-lg p-4 hover:bg-[#262626]/30 transition-colors\">\n                  <div className={cn(\n                    \"w-8 h-8 rounded-lg flex items-center justify-center flex-shrink-0 transition-colors\",\n                    message.role === 'assistant' \n                      ? \"bg-blue-500/20 text-blue-400\" \n                      : \"bg-purple-500/20 text-purple-400\"\n                  )}>\n                    {message.role === 'assistant' ? (\n                      <Bot className=\"w-5 h-5\" />\n                    ) : (\n                      <User className=\"w-5 h-5\" />\n                    )}\n                  </div>\n                  <div className=\"flex-1 space-y-2 overflow-hidden\">\n                    <div className=\"text-sm font-medium text-gray-400\">\n                      {message.role === 'user' ? 'You' : 'Assistant'}\n                    </div>\n                    <div className=\"text-gray-100\">\n                      <div className=\"prose prose-invert max-w-none break-words prose-p:leading-relaxed prose-p:text-gray-100 prose-p:my-1 prose-headings:text-gray-100 prose-strong:text-gray-100 prose-ul:text-gray-100 prose-ol:text-gray-100 prose-li:text-gray-100 prose-pre:bg-[#262626] prose-pre:text-sm prose-code:text-gray-100 prose-a:text-blue-400\">\n                        <ReactMarkdown>{message.content}</ReactMarkdown>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </AnimatePresence>\n\n          {/* Streaming Message */}\n          <AnimatePresence>\n            {isLoading && streamingContent && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0 }}\n                className=\"group\"\n              >\n                <div className=\"flex items-start gap-4 rounded-lg p-4 bg-[#262626]/30\">\n                  <div className=\"w-8 h-8 rounded-lg bg-blue-500/20 text-blue-400 flex items-center justify-center flex-shrink-0\">\n                    <Bot className=\"w-5 h-5\" />\n                  </div>\n                  <div className=\"flex-1 space-y-2 overflow-hidden\">\n                    <div className=\"text-sm font-medium text-gray-400\">Assistant</div>\n                    <div className=\"text-gray-100\">\n                      <div className=\"prose prose-invert max-w-none break-words prose-p:leading-relaxed prose-p:text-gray-100 prose-p:my-1 prose-headings:text-gray-100 prose-strong:text-gray-100 prose-ul:text-gray-100 prose-ol:text-gray-100 prose-li:text-gray-100 prose-pre:bg-[#262626] prose-pre:text-sm prose-code:text-gray-100 prose-a:text-blue-400\">\n                        <ReactMarkdown>{streamingContent}</ReactMarkdown>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          {/* Loading Indicator */}\n          <AnimatePresence>\n            {isLoading && !streamingContent && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0 }}\n                className=\"group\"\n              >\n                <div className=\"flex items-start gap-4 rounded-lg p-4\">\n                  <div className=\"w-8 h-8 rounded-lg bg-blue-500/20 text-blue-400 flex items-center justify-center flex-shrink-0\">\n                    <Loader2 className=\"w-5 h-5 animate-spin\" />\n                  </div>\n                  <div className=\"flex-1 space-y-2\">\n                    <div className=\"text-sm font-medium text-gray-400\">Assistant</div>\n                    <div className=\"flex items-center gap-2\">\n                      <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" />\n                      <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce delay-150\" />\n                      <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce delay-300\" />\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          <div ref={messagesEndRef} />\n        </div>\n      </div>\n\n      {/* Input Area */}\n      <div className=\"flex-none border-t border-[#262626]/50 bg-[#1A1A1A]/50 backdrop-blur-sm\">\n        <form onSubmit={handleSubmit} className=\"max-w-3xl mx-auto p-4\">\n          <div className=\"flex gap-4 items-center\">\n            <div className=\"relative flex-1\">\n              <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                placeholder=\"Type a message...\"\n                className=\"w-full bg-[#262626]/50 text-gray-200 rounded-lg pl-4 pr-10 py-3 focus:outline-none focus:ring-2 focus:ring-blue-500/50 placeholder-gray-500\"\n                disabled={isLoading}\n              />\n              {input.trim() && (\n                <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n                  <kbd className=\"hidden sm:inline-block px-2 py-1 text-xs font-medium text-gray-500 bg-[#1A1A1A] rounded\">⌘ ↵</kbd>\n                </div>\n              )}\n            </div>\n            <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n              <Button \n                type=\"submit\" \n                disabled={isLoading || !input.trim()}\n                className={cn(\n                  \"bg-blue-500 hover:bg-blue-600 text-white shadow-lg transition-all\",\n                  isLoading && \"opacity-50 cursor-not-allowed\"\n                )}\n              >\n                <Send className=\"w-4 h-4\" />\n              </Button>\n            </motion.div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 964, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 970, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/components/chat/debug-panel.tsx"],"sourcesContent":["// a component that displays the raw messages in the chat\n\n'use client';\n\nimport { RawMessage } from '@/types/chat';\nimport { cn } from '@/lib/utils';\nimport { motion } from 'framer-motion';\nimport { Bug, ChevronRight } from 'lucide-react';\nimport { useMemo, useRef, useEffect } from 'react';\n\ninterface DebugPanelProps {\n  messages: RawMessage[];\n}\n\ninterface Metadata {\n  thread_id?: string;\n  langgraph_node?: string;\n  ls_model_name?: string;\n  ls_temperature?: number;\n  [key: string]: any;\n}\n\ninterface MessageData {\n  type?: string;\n  content?: string;\n  [key: string]: any;\n}\n\nconst messageVariants = {\n  hidden: { opacity: 0, x: 20 },\n  visible: { opacity: 1, x: 0 },\n  exit: { opacity: 0, x: 20 }\n};\n\nfunction consolidateStreamingContent(messages: RawMessage[]) {\n  const consolidated: RawMessage[] = [];\n  let currentContent = '';\n  let currentMetadata: Metadata | null = null;\n  let currentThreadId: string | null = null;\n  let lastEventType = '';\n\n  // Helper function to normalize content\n  const normalizeContent = (content: string) => {\n    return content.replace(/\\s+/g, ' ').trim();\n  };\n\n  // Helper function to flush current content\n  const flushCurrentContent = () => {\n    if (currentContent) {\n      consolidated.push({\n        event: 'messages',\n        data: [\n          { content: normalizeContent(currentContent), type: 'AIMessageChunk' },\n          currentMetadata\n        ]\n      });\n      currentContent = '';\n    }\n  };\n\n  messages.forEach((msg) => {\n    if (msg.event === 'metadata') {\n      const newThreadId = (msg.data as Metadata)?.thread_id;\n      if (newThreadId !== currentThreadId) {\n        // Flush any existing content before thread change\n        flushCurrentContent();\n        \n        // Add separator for new thread\n        if (consolidated.length > 0) {\n          consolidated.push({\n            event: 'separator',\n            data: { timestamp: new Date().toISOString() }\n          });\n        }\n        currentThreadId = newThreadId || null;\n      }\n      consolidated.push(msg);\n      lastEventType = 'metadata';\n    } else if (msg.event === 'messages') {\n      const messageData = msg.data[0] as MessageData;\n      const metadata = msg.data[1] as Metadata;\n      const threadId = metadata?.thread_id;\n      \n      if (messageData?.type === 'AIMessageChunk') {\n        // Handle streaming content\n        if (lastEventType !== 'streaming' || threadId !== currentThreadId) {\n          flushCurrentContent();\n          currentContent = messageData.content || '';\n          currentMetadata = metadata;\n        } else {\n          // Append to current streaming content with proper spacing\n          const newContent = messageData.content || '';\n          if (newContent) {\n            currentContent += (currentContent && !currentContent.endsWith(' ') ? ' ' : '') + newContent;\n          }\n          currentMetadata = metadata;\n        }\n        lastEventType = 'streaming';\n        currentThreadId = threadId || null;\n      } else {\n        // Handle non-streaming messages\n        flushCurrentContent();\n        consolidated.push({\n          event: 'messages',\n          data: [\n            { ...messageData, content: messageData.content ? normalizeContent(messageData.content) : '' },\n            metadata\n          ]\n        });\n        lastEventType = 'message';\n      }\n    }\n  });\n\n  // Flush any remaining content\n  flushCurrentContent();\n\n  return consolidated;\n}\n\nexport function DebugPanel({ messages }: DebugPanelProps) {\n  const consolidatedMessages = useMemo(() => consolidateStreamingContent(messages), [messages]);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [consolidatedMessages]);\n\n  return (\n    <div className=\"h-full flex flex-col bg-[#141414] border-l border-[#262626]/50\">\n      {/* Header */}\n      <div className=\"flex-none p-4 border-b border-[#262626]/50 bg-[#1A1A1A]/50\">\n        <div className=\"flex items-center gap-2 text-gray-400\">\n          <Bug className=\"w-4 h-4\" />\n          <span className=\"text-sm font-medium\">Debug Panel</span>\n        </div>\n      </div>\n\n      {/* Messages */}\n      <div className=\"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-[#262626] scrollbar-track-transparent p-4 space-y-4\">\n        {consolidatedMessages.length === 0 ? (\n          <div className=\"text-center text-gray-500 text-sm p-8\">\n            No messages to display\n          </div>\n        ) : (\n          consolidatedMessages.map((msg, idx) => (\n            <motion.div\n              key={idx}\n              variants={messageVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n              className=\"group\"\n            >\n              {msg.event === 'separator' ? (\n                <div className=\"flex items-center gap-4 py-2 opacity-50\">\n                  <div className=\"h-px flex-1 bg-[#262626]\" />\n                  <div className=\"text-xs text-gray-500\">New Interaction</div>\n                  <div className=\"h-px flex-1 bg-[#262626]\" />\n                </div>\n              ) : (\n                <div className=\"rounded-lg overflow-hidden border border-[#262626]/50 bg-[#1A1A1A]/30\">\n                  {/* Event Header */}\n                  <div className={cn(\n                    \"px-3 py-2 text-sm font-medium flex items-center gap-2\",\n                    msg.event === 'metadata' ? \"bg-purple-500/10 text-purple-300\" :\n                    msg.event === 'values' ? \"bg-green-500/10 text-green-300\" :\n                    \"bg-blue-500/10 text-blue-300\"\n                  )}>\n                    <ChevronRight className=\"w-4 h-4\" />\n                    <span>event: {msg.event}</span>\n                  </div>\n\n                  {/* Event Data */}\n                  <div className=\"p-3\">\n                    {msg.event === 'messages' ? (\n                      <div className=\"space-y-3\">\n                        {msg.data.map((item: any, mIdx: number) => (\n                          <div key={mIdx} className=\"space-y-2\">\n                            {item.type && (\n                              <div className=\"text-yellow-300/90 text-sm font-medium\">\n                                Type: {item.type}\n                              </div>\n                            )}\n                            {item.content && (\n                              <div className=\"text-gray-300 text-sm break-words pl-2\">\n                                Content: {item.content}\n                              </div>\n                            )}\n                            {/* Show essential metadata only */}\n                            {mIdx === 1 && item && (\n                              <div className=\"text-gray-400 text-xs font-mono bg-[#262626]/30 p-2 rounded mt-2\">\n                                <div>Node: {item.langgraph_node}</div>\n                                <div>Model: {item.ls_model_name}</div>\n                                <div>Temperature: {item.ls_temperature}</div>\n                              </div>\n                            )}\n                          </div>\n                        ))}\n                      </div>\n                    ) : (\n                      <pre className=\"text-gray-300 text-sm whitespace-pre-wrap overflow-x-auto font-mono\">\n                        {JSON.stringify(msg.data, null, 2)}\n                      </pre>\n                    )}\n                  </div>\n                </div>\n              )}\n            </motion.div>\n          ))\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1343, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1349, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/components/chat/chat.tsx"],"sourcesContent":["// component for the chat interface\n\n'use client';\n\nimport { useState } from 'react';\nimport { useChat } from '@/contexts/ChatContext';\nimport { useChatActions } from '@/hooks/useChatActions';\nimport { ChatThread } from './chat-thread';\nimport { ChatWindow } from './chat-window';\nimport { DebugPanel } from './debug-panel';\nimport { Menu, X, Bug } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nconst springTransition = {\n  type: \"spring\",\n  stiffness: 300,\n  damping: 30\n};\n\nexport function Chat() {\n  const { messages, isLoading, rawMessages } = useChat();\n  const { sendMessage, ready } = useChatActions();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isDebugOpen, setIsDebugOpen] = useState(false);\n  const [activeThreadId, setActiveThreadId] = useState<string | undefined>();\n\n  // Mock threads data for now.\n  const [threads] = useState([\n    {\n      id: '1',\n      title: 'Why Did the DJ Quit?',\n      lastMessage: 'He lost his mix-tape! Help me not do the same...',\n      timestamp: '2m ago'\n    },\n    {\n      id: '2',\n      title: 'Songwriter\\'s Block 911', \n      lastMessage: 'My lyrics are so bad even my cat left the room',\n      timestamp: '1h ago'\n    },\n    {\n      id: '3',\n      title: 'Jazz Hands Emergency',\n      lastMessage: 'Need chord progressions smoother than my coffee',\n      timestamp: '2h ago'\n    },\n    {\n      id: '4',\n      title: 'Poetic Detective Work',\n      lastMessage: 'Is \"Baby, baby, baby, ooh\" really that deep?',\n      timestamp: '1d ago'\n    },\n    {\n      id: '5',\n      title: 'Drum Machine Drama',\n      lastMessage: 'My beats are dropping harder than my phone',\n      timestamp: '2d ago'\n    },\n    {\n      id: '6',\n      title: 'Bass Line Blues',\n      lastMessage: 'Looking for that perfect groove that makes heads bob',\n      timestamp: '3d ago'\n    },\n    {\n      id: '7',\n      title: 'Synth Wave Struggles',\n      lastMessage: 'Need help crafting that perfect 80s vibe',\n      timestamp: '4d ago'\n    },\n    {\n      id: '8',\n      title: 'Vocal Harmony Help',\n      lastMessage: 'Trying to stack harmonies like a pro',\n      timestamp: '5d ago'\n    },\n    {\n      id: '9',\n      title: 'Mix Master Mystery',\n      lastMessage: 'Why does my mix sound like underwater karaoke?',\n      timestamp: '1w ago'\n    }\n  ]);\n\n  const handleNewChat = () => {\n    // In a real app, you would create a new thread here\n    console.log('Creating new chat...');\n  };\n\n  const handleSelectThread = (threadId: string) => {\n    setActiveThreadId(threadId);\n    // In a real app, you would load the thread messages here\n  };\n\n  return (\n    <div className=\"flex h-screen bg-[#1A1A1A] relative overflow-hidden\">\n      {/* Backdrop for mobile sidebar */}\n      <AnimatePresence>\n        {isSidebarOpen && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 0.4 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-black md:hidden z-20\"\n            onClick={() => setIsSidebarOpen(false)}\n          />\n        )}\n      </AnimatePresence>\n\n      {/* Sidebar */}\n      <motion.div\n        initial={false}\n        animate={{\n          width: isSidebarOpen ? '320px' : '0px',\n          x: isSidebarOpen ? 0 : -320\n        }}\n        transition={springTransition}\n        className=\"fixed md:relative h-full z-30 overflow-hidden\"\n      >\n        <ChatThread\n          threads={threads}\n          onNewChat={handleNewChat}\n          onSelectThread={handleSelectThread}\n          activeThreadId={activeThreadId}\n        />\n      </motion.div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 flex flex-col min-w-0 h-screen relative\">\n        {/* Header */}\n        <div className=\"flex-none h-14 border-b border-[#262626] bg-[#1A1A1A]/80 backdrop-blur-md supports-[backdrop-filter]:bg-[#1A1A1A]/60 z-10\">\n          <div className=\"max-w-screen-2xl mx-auto px-4 h-full flex items-center justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <button\n                onClick={() => setIsSidebarOpen(!isSidebarOpen)}\n                className=\"p-2 hover:bg-[#262626] rounded-lg transition-all duration-200 ease-in-out\"\n              >\n                <motion.div\n                  animate={{ rotate: isSidebarOpen ? 0 : 180 }}\n                  transition={{ duration: 0.2 }}\n                >\n                  {isSidebarOpen ? <X className=\"w-5 h-5 text-gray-400\" /> : <Menu className=\"w-5 h-5 text-gray-400\" />}\n                </motion.div>\n              </button>\n              <div className=\"text-gray-200 font-medium\">\n                {activeThreadId ? threads.find(t => t.id === activeThreadId)?.title : 'New Chat'}\n              </div>\n            </div>\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={() => setIsDebugOpen(!isDebugOpen)}\n              className=\"px-3 py-1.5 text-sm text-gray-400 hover:bg-[#262626] rounded-lg transition-colors flex items-center gap-2\"\n            >\n              <Bug className=\"w-4 h-4\" />\n              <span className=\"hidden sm:inline\">{isDebugOpen ? 'Hide Debug' : 'Show Debug'}</span>\n            </motion.button>\n          </div>\n        </div>\n\n        {/* Chat and Debug Panel Container */}\n        <motion.div \n          className=\"flex-1 overflow-hidden flex\"\n          layout\n        >\n          {/* Chat Window */}\n          <motion.div\n            layout\n            className=\"flex-1 overflow-hidden\"\n            animate={{\n              width: isDebugOpen ? '50%' : '100%'\n            }}\n            transition={springTransition}\n          >\n            <ChatWindow\n              messages={messages}\n              isLoading={isLoading}\n              onSendMessage={sendMessage}\n            />\n          </motion.div>\n\n          {/* Debug Panel */}\n          <motion.div\n            layout\n            initial={{ width: 0 }}\n            animate={{\n              width: isDebugOpen ? '50%' : 0\n            }}\n            transition={springTransition}\n            className=\"overflow-hidden\"\n          >\n            {isDebugOpen && <DebugPanel messages={rawMessages || []} />}\n          </motion.div>\n        </motion.div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1680, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}