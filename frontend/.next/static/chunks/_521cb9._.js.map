{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/hooks/useChatActions.ts"],"sourcesContent":["'use client';\n\nimport { useClient } from '../contexts/ClientContext';\nimport { useChat } from '../contexts/ChatContext';\nimport { useCallback, useEffect, useState } from 'react';\nimport { \n  Message, \n  MessageTuple, \n  StreamPayload, \n  MessageChunk, \n  LangGraphMessage,\n  MessageMetadata,\n  ValuesEvent \n} from '@/types/chat';\n\nexport function useChatActions() {\n  const client = useClient();\n  const { addMessage, addRawMessage, clearRawMessages, setIsLoading, setStreamingContent } = useChat();\n  const [threadId, setThreadId] = useState<string | null>(null);\n  const [assistantId, setAssistantId] = useState<string | null>(null);\n\n  // Initialize thread and assistant on component mount\n  useEffect(() => {\n    async function init() {\n      if (!client) return;\n      \n      try {\n        // Create a new thread\n        const thread = await client.threads.create();\n        setThreadId(thread.thread_id);\n\n        // Get the first available assistant\n        const assistants = await client.assistants.search();\n        if (assistants.length > 0) {\n          setAssistantId(assistants[0].assistant_id);\n        } else {\n          console.error('No assistants available');\n        }\n      } catch (error) {\n        console.error('Error initializing chat:', error);\n      }\n    }\n\n    init();\n  }, [client]);\n\n  const sendMessage = useCallback(async (content: string) => {\n    if (!content.trim() || !client || !threadId || !assistantId) return;\n\n    // Add user message\n    const userMessage: Message = {\n      role: 'user',\n      content\n    };\n    addMessage(userMessage);\n    setIsLoading(true);\n    clearRawMessages(); // Clear previous raw messages\n\n    try {\n      // Create the stream with messages-tuple mode\n      const stream = await client.runs.stream(threadId, assistantId, {\n        input: {\n          messages: [userMessage]\n        },\n        streamMode: \"messages-tuple\"\n      } as StreamPayload);\n\n      let currentContent = '';\n      let isComplete = false;\n\n      // Process the stream\n      for await (const chunk of stream) {\n        // Store raw message for debugging\n        addRawMessage({\n          event: chunk.event,\n          data: chunk.data\n        });\n\n        // Handle different event types\n        if (chunk.event === 'metadata') {\n          // Run started\n          console.log('Run started:', chunk.data);\n        } else if (chunk.event === 'messages') {\n          const [message, metadata] = chunk.data as MessageTuple;\n          \n          if (message.type === 'AIMessageChunk') {\n            // Handle content which can be either string or array of chunks\n            let newContent = '';\n            if (Array.isArray(message.content)) {\n              // Content is an array of text chunks\n              newContent = message.content.map((c: { text: string }) => c.text).join('');\n            } else {\n              // Content is a string\n              newContent = message.content;\n            }\n\n            // Only append if we have new content\n            if (newContent.trim()) {\n              currentContent += newContent;\n              setStreamingContent(currentContent);\n            }\n\n            // Check for completion\n            if (message.response_metadata?.finish_reason === 'stop' || \n                (metadata.langgraph_node === 'agent' && !message.tool_calls)) {\n              isComplete = true;\n            }\n          } else if (message.type === 'tool') {\n            // Handle tool response if needed\n            console.log('Tool response:', message.content);\n          }\n        }\n      }\n\n      // After the stream is done, if we have content and it's complete, add it as a message\n      if (currentContent && isComplete) {\n        addMessage({\n          role: 'assistant',\n          content: currentContent\n        });\n      }\n      setStreamingContent('');\n      \n    } catch (error) {\n      console.error('Error sending message:', error);\n      addMessage({\n        role: 'assistant',\n        content: 'Sorry, there was an error processing your message. Please try again.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [client, threadId, assistantId, addMessage, addRawMessage, clearRawMessages, setIsLoading, setStreamingContent]);\n\n  const ready = Boolean(client && threadId && assistantId);\n\n  return {\n    sendMessage,\n    ready,\n    threadId,\n    assistantId\n  };\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-neutral-950 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:focus-visible:ring-neutral-300\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-neutral-900 text-neutral-50 shadow hover:bg-neutral-900/90 dark:bg-neutral-50 dark:text-neutral-900 dark:hover:bg-neutral-50/90\",\n        destructive:\n          \"bg-red-500 text-neutral-50 shadow-sm hover:bg-red-500/90 dark:bg-red-900 dark:text-neutral-50 dark:hover:bg-red-900/90\",\n        outline:\n          \"border border-neutral-200 bg-white shadow-sm hover:bg-neutral-100 hover:text-neutral-900 dark:border-neutral-800 dark:bg-neutral-950 dark:hover:bg-neutral-800 dark:hover:text-neutral-50\",\n        secondary:\n          \"bg-neutral-100 text-neutral-900 shadow-sm hover:bg-neutral-100/80 dark:bg-neutral-800 dark:text-neutral-50 dark:hover:bg-neutral-800/80\",\n        ghost: \"hover:bg-neutral-100 hover:text-neutral-900 dark:hover:bg-neutral-800 dark:hover:text-neutral-50\",\n        link: \"text-neutral-900 underline-offset-4 hover:underline dark:text-neutral-50\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,oVACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/components/chat/chat-thread.tsx"],"sourcesContent":["'use client';\n\nimport { MessageSquare, Plus } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\n\ninterface Thread {\n  id: string;\n  title: string;\n  lastMessage: string;\n  timestamp: string;\n}\n\ninterface ChatThreadProps {\n  threads: Thread[];\n  onNewChat: () => void;\n  onSelectThread: (threadId: string) => void;\n  activeThreadId?: string;\n}\n\nexport function ChatThread({ threads, onNewChat, onSelectThread, activeThreadId }: ChatThreadProps) {\n  return (\n    <div className=\"w-[300px] h-full bg-[#141414] border-r border-[#262626] flex flex-col\">\n      <div className=\"p-4\">\n        <Button \n          onClick={onNewChat}\n          className=\"w-full justify-start gap-2 bg-[#262626] hover:bg-[#333333] text-white\"\n          variant=\"ghost\"\n        >\n          <Plus className=\"w-4 h-4\" />\n          New Chat\n        </Button>\n      </div>\n\n      <div className=\"flex-1 overflow-auto\">\n        {threads.map((thread) => (\n          <button\n            key={thread.id}\n            onClick={() => onSelectThread(thread.id)}\n            className={cn(\n              \"w-full p-3 text-left transition-colors flex items-start gap-3\",\n              \"hover:bg-[#262626]\",\n              activeThreadId === thread.id ? \"bg-[#262626]\" : \"bg-transparent\"\n            )}\n          >\n            <div className=\"w-5 h-5 mt-1 flex-shrink-0\">\n              <MessageSquare className=\"w-full h-full text-gray-400\" />\n            </div>\n            <div className=\"flex-1 min-w-0 text-sm\">\n              <p className=\"text-gray-200 truncate\">\n                {thread.title}\n              </p>\n              <p className=\"text-gray-500 text-xs truncate mt-0.5\">\n                {thread.lastMessage}\n              </p>\n              <p className=\"text-gray-600 text-xs mt-1\">\n                {thread.timestamp}\n              </p>\n            </div>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAGA;AACA;AAFA;AAAA;AAFA;;;;;AAoBO,SAAS,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,cAAc,EAAE,cAAc,EAAmB;IAChG,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,8HAAA,CAAA,SAAM;oBACL,SAAS;oBACT,WAAU;oBACV,SAAQ;;sCAER,6LAAC,qMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;wBAAY;;;;;;;;;;;;0BAKhC,6LAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,uBACZ,6LAAC;wBAEC,SAAS,IAAM,eAAe,OAAO,EAAE;wBACvC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iEACA,sBACA,mBAAmB,OAAO,EAAE,GAAG,iBAAiB;;0CAGlD,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,2NAAA,CAAA,gBAAa;oCAAC,WAAU;;;;;;;;;;;0CAE3B,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAE,WAAU;kDACV,OAAO,KAAK;;;;;;kDAEf,6LAAC;wCAAE,WAAU;kDACV,OAAO,WAAW;;;;;;kDAErB,6LAAC;wCAAE,WAAU;kDACV,OAAO,SAAS;;;;;;;;;;;;;uBAnBhB,OAAO,EAAE;;;;;;;;;;;;;;;;AA2B1B;KA5CgB"}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/components/chat/chat-window.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { Send, User, Bot } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Message } from '@/contexts/ChatContext';\nimport { useChat } from '@/contexts/ChatContext';\nimport ReactMarkdown from 'react-markdown';\n\ninterface ChatWindowProps {\n  messages: Message[];\n  isLoading: boolean;\n  onSendMessage: (message: string) => void;\n}\n\nexport function ChatWindow({ messages, isLoading, onSendMessage }: ChatWindowProps) {\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const { streamingContent } = useChat();\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, streamingContent]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n    onSendMessage(input);\n    setInput('');\n  };\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      {/* Messages Area */}\n      <div className=\"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-[#262626] scrollbar-track-transparent\">\n        <div className=\"max-w-3xl mx-auto p-4 space-y-6\">\n          {messages.map((message, index) => (\n            <div\n              key={index}\n              className=\"flex items-start gap-4 animate-fade-up\"\n            >\n              <div className=\"w-8 h-8 rounded-md bg-[#262626] flex items-center justify-center flex-shrink-0\">\n                {message.role === 'assistant' ? (\n                  <Bot className=\"w-4 h-4 text-gray-400\" />\n                ) : (\n                  <User className=\"w-4 h-4 text-gray-400\" />\n                )}\n              </div>\n              <div className=\"flex-1 space-y-1 overflow-hidden\">\n                <div className=\"text-sm text-gray-400\">\n                  {message.role === 'user' ? 'You' : 'Assistant'}\n                </div>\n                <div className=\"text-gray-200 prose prose-invert max-w-none break-words\">\n                  <ReactMarkdown>{message.content}</ReactMarkdown>\n                </div>\n              </div>\n            </div>\n          ))}\n\n          {/* Streaming Message */}\n          {isLoading && streamingContent && (\n            <div className=\"flex items-start gap-4 animate-fade-up\">\n              <div className=\"w-8 h-8 rounded-md bg-[#262626] flex items-center justify-center flex-shrink-0\">\n                <Bot className=\"w-4 h-4 text-gray-400\" />\n              </div>\n              <div className=\"flex-1 space-y-1 overflow-hidden\">\n                <div className=\"text-sm text-gray-400\">Assistant</div>\n                <div className=\"text-gray-200 prose prose-invert max-w-none break-words\">\n                  <ReactMarkdown>{streamingContent}</ReactMarkdown>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Loading Indicator */}\n          {isLoading && !streamingContent && (\n            <div className=\"flex items-center gap-4 animate-fade-up\">\n              <div className=\"w-8 h-8 rounded-md bg-[#262626] flex items-center justify-center flex-shrink-0\">\n                <Bot className=\"w-4 h-4 text-gray-400\" />\n              </div>\n              <div className=\"flex-1 space-y-2\">\n                <div className=\"text-sm text-gray-400\">Assistant</div>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" />\n                  <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce delay-150\" />\n                  <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce delay-300\" />\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div ref={messagesEndRef} />\n        </div>\n      </div>\n\n      {/* Input Area */}\n      <form onSubmit={handleSubmit} className=\"flex-none p-4 border-t border-[#262626] bg-[#1A1A1A]\">\n        <div className=\"flex gap-4 max-w-3xl mx-auto\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Type a message...\"\n            className=\"flex-1 bg-[#262626] text-gray-200 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            disabled={isLoading}\n          />\n          <Button \n            type=\"submit\" \n            disabled={isLoading || !input.trim()}\n            className=\"bg-blue-500 hover:bg-blue-600 text-white\"\n          >\n            <Send className=\"w-4 h-4\" />\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAAA;AAIA;AAJA;;;AAHA;;;;;;AAeO,SAAS,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,aAAa,EAAmB;;IAChF,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAC9C,MAAM,EAAE,gBAAgB,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAO,AAAD;IAEnC,MAAM,iBAAiB;QACrB,eAAe,OAAO,EAAE,eAAe;YAAE,UAAU;QAAS;IAC9D;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR;QACF;+BAAG;QAAC;QAAU;KAAiB;IAE/B,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,IAAI,CAAC,MAAM,IAAI,MAAM,WAAW;QAChC,cAAc;QACd,SAAS;IACX;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;wBACZ,SAAS,GAAG,CAAC,CAAC,SAAS,sBACtB,6LAAC;gCAEC,WAAU;;kDAEV,6LAAC;wCAAI,WAAU;kDACZ,QAAQ,IAAI,KAAK,4BAChB,6LAAC,mMAAA,CAAA,MAAG;4CAAC,WAAU;;;;;iEAEf,6LAAC,qMAAA,CAAA,OAAI;4CAAC,WAAU;;;;;;;;;;;kDAGpB,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;0DACZ,QAAQ,IAAI,KAAK,SAAS,QAAQ;;;;;;0DAErC,6LAAC;gDAAI,WAAU;0DACb,cAAA,6LAAC,2LAAA,CAAA,UAAa;8DAAE,QAAQ,OAAO;;;;;;;;;;;;;;;;;;+BAf9B;;;;;wBAsBR,aAAa,kCACZ,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC,mMAAA,CAAA,MAAG;wCAAC,WAAU;;;;;;;;;;;8CAEjB,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDAAwB;;;;;;sDACvC,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC,2LAAA,CAAA,UAAa;0DAAE;;;;;;;;;;;;;;;;;;;;;;;wBAOvB,aAAa,CAAC,kCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC,mMAAA,CAAA,MAAG;wCAAC,WAAU;;;;;;;;;;;8CAEjB,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDAAwB;;;;;;sDACvC,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;;;;;;8DACf,6LAAC;oDAAI,WAAU;;;;;;8DACf,6LAAC;oDAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;;sCAMvB,6LAAC;4BAAI,KAAK;;;;;;;;;;;;;;;;;0BAKd,6LAAC;gBAAK,UAAU;gBAAc,WAAU;0BACtC,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,aAAY;4BACZ,WAAU;4BACV,UAAU;;;;;;sCAEZ,6LAAC,8HAAA,CAAA,SAAM;4BACL,MAAK;4BACL,UAAU,aAAa,CAAC,MAAM,IAAI;4BAClC,WAAU;sCAEV,cAAA,6LAAC,qMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM5B;GA1GgB;;QAGe,2HAAA,CAAA,UAAO;;;KAHtB"}},
    {"offset": {"line": 691, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 697, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/components/chat/chat.tsx"],"sourcesContent":["// component for the chat interface\n\n'use client';\n\nimport { useState } from 'react';\nimport { useChat } from '@/contexts/ChatContext';\nimport { useChatActions } from '@/hooks/useChatActions';\nimport { ChatThread } from './chat-thread';\nimport { ChatWindow } from './chat-window';\nimport { Menu } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\nexport function Chat() {\n  const { messages, isLoading } = useChat();\n  const { sendMessage, ready } = useChatActions();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [activeThreadId, setActiveThreadId] = useState<string | undefined>();\n\n  // Mock threads data - in real app, this would come from your backend\n  const [threads] = useState([\n    {\n      id: '1',\n      title: 'Why Did the DJ Quit?',\n      lastMessage: 'He lost his mix-tape! Help me not do the same...',\n      timestamp: '2m ago'\n    },\n    {\n      id: '2',\n      title: 'Songwriter\\'s Block 911', \n      lastMessage: 'My lyrics are so bad even my cat left the room',\n      timestamp: '1h ago'\n    },\n    {\n      id: '3',\n      title: 'Jazz Hands Emergency',\n      lastMessage: 'Need chord progressions smoother than my coffee',\n      timestamp: '2h ago'\n    },\n    {\n      id: '4',\n      title: 'Poetic Detective Work',\n      lastMessage: 'Is \"Baby, baby, baby, ooh\" really that deep?',\n      timestamp: '1d ago'\n    },\n    {\n      id: '5',\n      title: 'Drum Machine Drama',\n      lastMessage: 'My beats are dropping harder than my phone',\n      timestamp: '2d ago'\n    },\n    {\n      id: '6',\n      title: 'Bass Line Blues',\n      lastMessage: 'Looking for that perfect groove that makes heads bob',\n      timestamp: '3d ago'\n    },\n    {\n      id: '7',\n      title: 'Synth Wave Struggles',\n      lastMessage: 'Need help crafting that perfect 80s vibe',\n      timestamp: '4d ago'\n    },\n    {\n      id: '8',\n      title: 'Vocal Harmony Help',\n      lastMessage: 'Trying to stack harmonies like a pro',\n      timestamp: '5d ago'\n    },\n    {\n      id: '9',\n      title: 'Mix Master Mystery',\n      lastMessage: 'Why does my mix sound like underwater karaoke?',\n      timestamp: '1w ago'\n    }\n  ]);\n\n  const handleNewChat = () => {\n    // In a real app, you would create a new thread here\n    console.log('Creating new chat...');\n  };\n\n  const handleSelectThread = (threadId: string) => {\n    setActiveThreadId(threadId);\n    // In a real app, you would load the thread messages here\n  };\n\n  return (\n    <div className=\"flex h-screen overflow-hidden bg-[#1A1A1A]\">\n      {/* Sidebar */}\n      <div\n        className={cn(\n          'fixed md:relative h-full md:h-screen transition-transform duration-200 ease-in-out z-30 md:flex',\n          isSidebarOpen ? 'translate-x-0' : '-translate-x-full'\n        )}\n      >\n        <ChatThread\n          threads={threads}\n          onNewChat={handleNewChat}\n          onSelectThread={handleSelectThread}\n          activeThreadId={activeThreadId}\n        />\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 flex flex-col min-w-0 h-screen\">\n        {/* Header */}\n        <div className=\"flex-none h-14 border-b border-[#262626] flex items-center gap-4 px-4 bg-[#1A1A1A]\">\n          <button\n            onClick={() => setIsSidebarOpen(!isSidebarOpen)}\n            className=\"p-2 hover:bg-[#262626] rounded-lg transition-colors md:hidden\"\n          >\n            <Menu className=\"w-5 h-5 text-gray-400\" />\n          </button>\n          <div className=\"text-gray-200\">\n            {activeThreadId ? threads.find(t => t.id === activeThreadId)?.title : 'New Chat'}\n          </div>\n        </div>\n\n        {/* Chat Window */}\n        <div className=\"flex-1 overflow-hidden\">\n          <ChatWindow\n            messages={messages}\n            isLoading={isLoading}\n            onSendMessage={sendMessage}\n          />\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"AAAA,mCAAmC;;;;;AAInC;AACA;AACA;AACA;AACA;AAEA;AADA;;;AAPA;;;;;;;;AAUO,SAAS;;IACd,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAO,AAAD;IACtC,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,0HAAA,CAAA,iBAAc,AAAD;IAC5C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;IAEnD,qEAAqE;IACrE,MAAM,CAAC,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QACzB;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,WAAW;QACb;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,WAAW;QACb;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,WAAW;QACb;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,WAAW;QACb;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,WAAW;QACb;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,WAAW;QACb;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,WAAW;QACb;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,WAAW;QACb;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,WAAW;QACb;KACD;IAED,MAAM,gBAAgB;QACpB,oDAAoD;QACpD,QAAQ,GAAG,CAAC;IACd;IAEA,MAAM,qBAAqB,CAAC;QAC1B,kBAAkB;IAClB,yDAAyD;IAC3D;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mGACA,gBAAgB,kBAAkB;0BAGpC,cAAA,6LAAC,wIAAA,CAAA,aAAU;oBACT,SAAS;oBACT,WAAW;oBACX,gBAAgB;oBAChB,gBAAgB;;;;;;;;;;;0BAKpB,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,SAAS,IAAM,iBAAiB,CAAC;gCACjC,WAAU;0CAEV,cAAA,6LAAC,qMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;;;;;;0CAElB,6LAAC;gCAAI,WAAU;0CACZ,iBAAiB,QAAQ,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,iBAAiB,QAAQ;;;;;;;;;;;;kCAK1E,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,wIAAA,CAAA,aAAU;4BACT,UAAU;4BACV,WAAW;4BACX,eAAe;;;;;;;;;;;;;;;;;;;;;;;AAM3B;GArHgB;;QACkB,2HAAA,CAAA,UAAO;QACR,0HAAA,CAAA,iBAAc;;;KAF/B"}},
    {"offset": {"line": 886, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}