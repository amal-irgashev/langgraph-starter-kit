{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/hooks/useEventSource.ts"],"sourcesContent":["// manage the event source connection\n\nimport { useState, useEffect, useRef } from 'react';\n\ninterface UseEventSourceProps {\n  threadId: string;\n  assistantId: string;\n  onMessage?: (event: MessageEvent) => void;\n  onError?: (error: Event) => void;\n}\n\nexport function useEventSource({ threadId, assistantId, onMessage, onError }: UseEventSourceProps) {\n  const [isConnected, setIsConnected] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n  const eventSourceRef = useRef<EventSource | null>(null);\n  const reconnectCountRef = useRef(0);\n  const MAX_RECONNECT_ATTEMPTS = 3;\n\n  useEffect(() => {\n    if (!threadId || !assistantId) {\n      console.log('Missing required params:', { threadId, assistantId });\n      return;\n    }\n\n    // Reset reconnect count on new connection attempt\n    reconnectCountRef.current = 0;\n\n    function connect() {\n      if (reconnectCountRef.current >= MAX_RECONNECT_ATTEMPTS) {\n        console.log('Max reconnection attempts reached');\n        setError(new Error('Max reconnection attempts reached'));\n        return;\n      }\n\n      if (eventSourceRef.current) {\n        console.log('Closing existing connection before reconnecting');\n        eventSourceRef.current.close();\n      }\n\n      const url = new URL('/api/stream', window.location.origin);\n      url.searchParams.append('thread_id', threadId);\n      url.searchParams.append('assistant_id', assistantId);\n      url.searchParams.append('stream_mode', 'messages');\n\n      console.log('Creating EventSource with URL:', url.toString());\n\n      const eventSource = new EventSource(url.toString());\n      eventSourceRef.current = eventSource;\n\n      eventSource.onopen = () => {\n        console.log('SSE connection opened');\n        setIsConnected(true);\n        setError(null);\n        reconnectCountRef.current = 0; // Reset count on successful connection\n      };\n\n      eventSource.onmessage = (event) => {\n        console.log('SSE message received:', event.data);\n        try {\n          const data = JSON.parse(event.data);\n          if (data.error) {\n            console.error('SSE message error:', data.error);\n            setError(new Error(data.message || 'Stream error'));\n            eventSource.close();\n            return;\n          }\n          onMessage?.(event);\n        } catch (err) {\n          console.error('Error handling SSE message:', err);\n        }\n      };\n\n      eventSource.onerror = (error) => {\n        console.error('SSE connection error:', error);\n        setIsConnected(false);\n        setError(new Error('SSE connection failed'));\n        eventSource.close();\n        onError?.(error);\n        \n        // Only attempt reconnect if we haven't reached the limit\n        if (reconnectCountRef.current < MAX_RECONNECT_ATTEMPTS) {\n          console.log(`Reconnect attempt ${reconnectCountRef.current + 1}/${MAX_RECONNECT_ATTEMPTS}`);\n          reconnectCountRef.current++;\n          setTimeout(connect, 1000 * Math.pow(2, reconnectCountRef.current)); // Exponential backoff\n        }\n      };\n    }\n\n    connect();\n\n    return () => {\n      console.log('Cleaning up SSE connection');\n      if (eventSourceRef.current) {\n        eventSourceRef.current.close();\n        eventSourceRef.current = null;\n      }\n      setIsConnected(false);\n    };\n  }, [threadId, assistantId, onMessage, onError]);\n\n  const closeConnection = () => {\n    if (eventSourceRef.current) {\n      console.log('Manually closing SSE connection');\n      eventSourceRef.current.close();\n      eventSourceRef.current = null;\n      setIsConnected(false);\n    }\n  };\n\n  return {\n    isConnected,\n    error,\n    closeConnection\n  };\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/hooks/useChatActions.ts"],"sourcesContent":["'use client';\n\nimport { useClient } from '../contexts/ClientContext';\nimport { useChat } from '../contexts/ChatContext';\nimport { useCallback, useEffect, useState } from 'react';\nimport { \n  Message, \n  MessageTuple, \n  StreamPayload, \n  MessageChunk, \n  LangGraphMessage,\n  MessageMetadata,\n  ValuesEvent \n} from '@/types/chat';\nimport { useEventSource } from './useEventSource';\n\ninterface UseChatActionsProps {\n  threadId?: string;\n  assistantId?: string;\n}\n\nexport function useChatActions({ threadId: initialThreadId, assistantId: initialAssistantId }: UseChatActionsProps = {}) {\n  const client = useClient();\n  const { addMessage, setIsLoading, setStreamingContent, streamingContent } = useChat();\n  const [ready, setReady] = useState(false);\n  const [threadId, setThreadId] = useState<string | undefined>(initialThreadId);\n  const [assistantId, setAssistantId] = useState<string | undefined>(initialAssistantId);\n\n  // Initialize thread and assistant on component mount\n  useEffect(() => {\n    async function init() {\n      if (!client) return;\n      \n      try {\n        // If no thread ID is provided, create a new one\n        if (!threadId) {\n          const thread = await client.threads.create();\n          setThreadId(thread.thread_id);\n        }\n\n        // If no assistant ID is provided, get the first available one\n        if (!assistantId) {\n          const assistants = await client.assistants.search();\n          if (assistants.length > 0) {\n            setAssistantId(assistants[0].assistant_id);\n          }\n        }\n\n        setReady(true);\n      } catch (error) {\n        console.error('Error initializing chat:', error);\n        setReady(false);\n      }\n    }\n\n    init();\n  }, [client, threadId, assistantId]);\n\n  const handleMessage = useCallback((event: MessageEvent) => {\n    try {\n      const data = JSON.parse(event.data);\n      if (data.event === 'messages') {\n        const message = data.data[0];\n        if (message?.type === 'AIMessageChunk') {\n          setStreamingContent(streamingContent + (message.content || ''));\n        }\n      }\n    } catch (error) {\n      console.error('Error parsing message:', error);\n    }\n  }, [setStreamingContent, streamingContent]);\n\n  const { isConnected } = useEventSource({\n    threadId: threadId || '',\n    assistantId: assistantId || '',\n    onMessage: handleMessage,\n    onError: (error) => {\n      console.error('SSE Error:', error);\n      setReady(false);\n    }\n  });\n\n  const sendMessage = useCallback(async (content: string) => {\n    if (!content.trim() || !isConnected || !threadId || !assistantId) return;\n\n    setIsLoading(true);\n    setStreamingContent('');\n    \n    try {\n      // Add user message to the chat\n      addMessage({ role: 'user', content });\n\n      // Send message to the server\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          thread_id: threadId,\n          assistant_id: assistantId,\n          message: content,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to send message');\n      }\n\n      // The response will be streamed through SSE\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setStreamingContent('Error: Failed to send message');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [threadId, assistantId, isConnected, addMessage, setIsLoading, setStreamingContent]);\n\n  return {\n    sendMessage,\n    ready: ready && isConnected && !!threadId && !!assistantId,\n    threadId,\n    assistantId\n  };\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-neutral-950 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:focus-visible:ring-neutral-300\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-neutral-900 text-neutral-50 shadow hover:bg-neutral-900/90 dark:bg-neutral-50 dark:text-neutral-900 dark:hover:bg-neutral-50/90\",\n        destructive:\n          \"bg-red-500 text-neutral-50 shadow-sm hover:bg-red-500/90 dark:bg-red-900 dark:text-neutral-50 dark:hover:bg-red-900/90\",\n        outline:\n          \"border border-neutral-200 bg-white shadow-sm hover:bg-neutral-100 hover:text-neutral-900 dark:border-neutral-800 dark:bg-neutral-950 dark:hover:bg-neutral-800 dark:hover:text-neutral-50\",\n        secondary:\n          \"bg-neutral-100 text-neutral-900 shadow-sm hover:bg-neutral-100/80 dark:bg-neutral-800 dark:text-neutral-50 dark:hover:bg-neutral-800/80\",\n        ghost: \"hover:bg-neutral-100 hover:text-neutral-900 dark:hover:bg-neutral-800 dark:hover:text-neutral-50\",\n        link: \"text-neutral-900 underline-offset-4 hover:underline dark:text-neutral-50\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,oVACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/components/chat/chat-thread.tsx"],"sourcesContent":["'use client';\n\nimport { MessageSquare, Plus, Trash2 } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\nimport { useThread } from '@/contexts/ThreadContext';\nimport { useClient } from '@/contexts/ClientContext';\nimport { useState } from 'react';\n\ninterface Thread {\n  id: string;\n  title: string;\n  lastMessage: string;\n  timestamp: string;\n}\n\ninterface ChatThreadProps {\n  threads: Thread[];\n  onNewChat: () => void;\n  onSelectThread: (threadId: string) => void;\n  activeThreadId?: string;\n}\n\nexport function ChatThread({ threads, onNewChat, onSelectThread, activeThreadId }: ChatThreadProps) {\n  const { deleteThread } = useThread();\n  const client = useClient();\n  const [isCreating, setIsCreating] = useState(false);\n\n  const handleNewChat = async () => {\n    if (!client || isCreating) return;\n    \n    setIsCreating(true);\n    try {\n      const thread = await client.threads.create();\n      onNewChat();\n      onSelectThread(thread.thread_id);\n    } catch (error) {\n      console.error('Error creating new thread:', error);\n    } finally {\n      setIsCreating(false);\n    }\n  };\n\n  const handleDeleteThread = async (e: React.MouseEvent, threadId: string) => {\n    e.stopPropagation();\n    try {\n      await deleteThread(threadId);\n      // If the deleted thread was active, create a new one\n      if (activeThreadId === threadId) {\n        handleNewChat();\n      }\n    } catch (error) {\n      console.error('Error deleting thread:', error);\n    }\n  };\n\n  const handleThreadSelect = (threadId: string) => {\n    if (threadId === activeThreadId) return;\n    onSelectThread(threadId);\n  };\n\n  return (\n    <div className=\"w-[300px] h-full bg-[#141414] border-r border-[#262626] flex flex-col\">\n      <div className=\"p-4\">\n        <Button \n          onClick={handleNewChat}\n          className=\"w-full justify-start gap-2 bg-[#262626] hover:bg-[#333333] text-white\"\n          variant=\"ghost\"\n          disabled={isCreating}\n        >\n          <Plus className=\"w-4 h-4\" />\n          {isCreating ? 'Creating...' : 'New Chat'}\n        </Button>\n      </div>\n\n      <div className=\"flex-1 overflow-auto\">\n        {threads.map((thread) => (\n          <div\n            key={`thread-${thread.id}`}\n            className={cn(\n              \"group relative w-full p-3 text-left transition-colors flex items-start gap-3\",\n              \"hover:bg-[#262626]\",\n              activeThreadId === thread.id ? \"bg-[#262626]\" : \"bg-transparent\"\n            )}\n          >\n            <button\n              onClick={() => handleThreadSelect(thread.id)}\n              className=\"flex items-start gap-3 flex-1\"\n            >\n              <div className=\"w-5 h-5 mt-1 flex-shrink-0\">\n                <MessageSquare className=\"w-full h-full text-gray-400\" />\n              </div>\n              <div className=\"flex-1 min-w-0 text-sm\">\n                <p className=\"text-gray-200 truncate\">\n                  {thread.title}\n                </p>\n                <p className=\"text-gray-500 text-xs truncate mt-0.5\">\n                  {thread.lastMessage}\n                </p>\n                <p className=\"text-gray-600 text-xs mt-1\">\n                  {thread.timestamp}\n                </p>\n              </div>\n            </button>\n            <button\n              onClick={(e) => handleDeleteThread(e, thread.id)}\n              className=\"opacity-0 group-hover:opacity-100 transition-opacity p-1 hover:bg-[#333333] rounded\"\n              disabled={isCreating}\n            >\n              <Trash2 className=\"w-4 h-4 text-gray-400 hover:text-red-400\" />\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;;;AAFA;;;;;;;AAuBO,SAAS,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,cAAc,EAAE,cAAc,EAAmB;;IAChG,MAAM,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,6HAAA,CAAA,YAAS,AAAD;IACjC,MAAM,SAAS,CAAA,GAAA,6HAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,gBAAgB;QACpB,IAAI,CAAC,UAAU,YAAY;QAE3B,cAAc;QACd,IAAI;YACF,MAAM,SAAS,MAAM,OAAO,OAAO,CAAC,MAAM;YAC1C;YACA,eAAe,OAAO,SAAS;QACjC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;QAC9C,SAAU;YACR,cAAc;QAChB;IACF;IAEA,MAAM,qBAAqB,OAAO,GAAqB;QACrD,EAAE,eAAe;QACjB,IAAI;YACF,MAAM,aAAa;YACnB,qDAAqD;YACrD,IAAI,mBAAmB,UAAU;gBAC/B;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;QAC1C;IACF;IAEA,MAAM,qBAAqB,CAAC;QAC1B,IAAI,aAAa,gBAAgB;QACjC,eAAe;IACjB;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,8HAAA,CAAA,SAAM;oBACL,SAAS;oBACT,WAAU;oBACV,SAAQ;oBACR,UAAU;;sCAEV,6LAAC,qMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;wBACf,aAAa,gBAAgB;;;;;;;;;;;;0BAIlC,6LAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,uBACZ,6LAAC;wBAEC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,gFACA,sBACA,mBAAmB,OAAO,EAAE,GAAG,iBAAiB;;0CAGlD,6LAAC;gCACC,SAAS,IAAM,mBAAmB,OAAO,EAAE;gCAC3C,WAAU;;kDAEV,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC,2NAAA,CAAA,gBAAa;4CAAC,WAAU;;;;;;;;;;;kDAE3B,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAE,WAAU;0DACV,OAAO,KAAK;;;;;;0DAEf,6LAAC;gDAAE,WAAU;0DACV,OAAO,WAAW;;;;;;0DAErB,6LAAC;gDAAE,WAAU;0DACV,OAAO,SAAS;;;;;;;;;;;;;;;;;;0CAIvB,6LAAC;gCACC,SAAS,CAAC,IAAM,mBAAmB,GAAG,OAAO,EAAE;gCAC/C,WAAU;gCACV,UAAU;0CAEV,cAAA,6LAAC,6MAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;;;;;;;uBA/Bf,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE;;;;;;;;;;;;;;;;AAsCtC;GA7FgB;;QACW,6HAAA,CAAA,YAAS;QACnB,6HAAA,CAAA,YAAS;;;KAFV"}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 562, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/components/chat/chat-input.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Send } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\nimport { motion } from 'framer-motion';\n\ninterface ChatInputProps {\n  onSendMessage: (content: string) => Promise<void>;\n  isLoading: boolean;\n  isReady?: boolean;\n}\n\nexport function ChatInput({ onSendMessage, isLoading, isReady = true }: ChatInputProps) {\n  const [input, setInput] = useState('');\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!input.trim() || !isReady) return;\n\n    try {\n      await onSendMessage(input.trim());\n      setInput('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"max-w-3xl mx-auto p-4\">\n      <div className=\"flex gap-4 items-center\">\n        <div className=\"relative flex-1\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder={isReady ? \"Type a message...\" : \"Select or create a chat to start\"}\n            className={cn(\n              \"w-full bg-[#262626]/50 text-gray-200 rounded-lg pl-4 pr-10 py-3\",\n              \"focus:outline-none focus:ring-2 focus:ring-blue-500/50\",\n              \"placeholder-gray-500\",\n              (!isReady || isLoading) && \"opacity-50 cursor-not-allowed\"\n            )}\n            disabled={!isReady || isLoading}\n          />\n          {input.trim() && (\n            <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n              <kbd className=\"hidden sm:inline-block px-2 py-1 text-xs font-medium text-gray-500 bg-[#1A1A1A] rounded\">⌘ ↵</kbd>\n            </div>\n          )}\n        </div>\n        <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n          <Button \n            type=\"submit\" \n            disabled={!isReady || isLoading || !input.trim()}\n            className={cn(\n              \"bg-blue-500 hover:bg-blue-600 text-white shadow-lg transition-all\",\n              (!isReady || isLoading) && \"opacity-50 cursor-not-allowed\"\n            )}\n          >\n            <Send className=\"w-4 h-4\" />\n          </Button>\n        </motion.div>\n      </div>\n    </form>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AAHA;;;AAHA;;;;;;AAcO,SAAS,UAAU,EAAE,aAAa,EAAE,SAAS,EAAE,UAAU,IAAI,EAAkB;;IACpF,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS;QAE/B,IAAI;YACF,MAAM,cAAc,MAAM,IAAI;YAC9B,SAAS;QACX,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;QAC1C;IACF;IAEA,qBACE,6LAAC;QAAK,UAAU;QAAc,WAAU;kBACtC,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,aAAa,UAAU,sBAAsB;4BAC7C,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mEACA,0DACA,wBACA,CAAC,CAAC,WAAW,SAAS,KAAK;4BAE7B,UAAU,CAAC,WAAW;;;;;;wBAEvB,MAAM,IAAI,oBACT,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;0CAA0F;;;;;;;;;;;;;;;;;8BAI/G,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;oBAAC,YAAY;wBAAE,OAAO;oBAAK;oBAAG,UAAU;wBAAE,OAAO;oBAAK;8BAC/D,cAAA,6LAAC,8HAAA,CAAA,SAAM;wBACL,MAAK;wBACL,UAAU,CAAC,WAAW,aAAa,CAAC,MAAM,IAAI;wBAC9C,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qEACA,CAAC,CAAC,WAAW,SAAS,KAAK;kCAG7B,cAAA,6LAAC,qMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM5B;GArDgB;KAAA"}},
    {"offset": {"line": 681, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 687, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/components/chat/chat-window.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { Send, User, Bot, Loader2 } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Message } from '@/types/chat';\nimport { useChat } from '@/contexts/ChatContext';\nimport ReactMarkdown from 'react-markdown';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { cn } from '@/lib/utils';\nimport { ChatInput } from './chat-input';\nimport { MessageItem } from './message-item';\n\ninterface ChatWindowProps {\n  messages: Message[];\n  isLoading: boolean;\n  onSendMessage: (content: string) => Promise<void>;\n  isReady?: boolean;\n}\n\nconst messageVariants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: { opacity: 1, y: 0 },\n  exit: { opacity: 0, x: -100 }\n};\n\nexport function ChatWindow({ messages, isLoading, onSendMessage, isReady = true }: ChatWindowProps) {\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const { streamingContent } = useChat();\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, streamingContent]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n    onSendMessage(input);\n    setInput('');\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-gradient-to-b from-[#1A1A1A] to-[#141414]\">\n      {/* Messages Area */}\n      <div className=\"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-[#262626] scrollbar-track-transparent\">\n        <div className=\"max-w-3xl mx-auto p-4 space-y-6\">\n          <AnimatePresence initial={false}>\n            {messages.map((message, index) => (\n              <motion.div\n                key={index}\n                variants={messageVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ duration: 0.3 }}\n                className=\"group\"\n              >\n                <div className=\"flex items-start gap-4 rounded-lg p-4 hover:bg-[#262626]/30 transition-colors\">\n                  <div className={cn(\n                    \"w-8 h-8 rounded-lg flex items-center justify-center flex-shrink-0 transition-colors\",\n                    message.role === 'assistant' \n                      ? \"bg-blue-500/20 text-blue-400\" \n                      : \"bg-purple-500/20 text-purple-400\"\n                  )}>\n                    {message.role === 'assistant' ? (\n                      <Bot className=\"w-5 h-5\" />\n                    ) : (\n                      <User className=\"w-5 h-5\" />\n                    )}\n                  </div>\n                  <div className=\"flex-1 space-y-2 overflow-hidden\">\n                    <div className=\"text-sm font-medium text-gray-400\">\n                      {message.role === 'user' ? 'You' : 'Assistant'}\n                    </div>\n                    <div className=\"text-gray-100\">\n                      <div className=\"prose prose-invert max-w-none break-words prose-p:leading-relaxed prose-p:text-gray-100 prose-p:my-1 prose-headings:text-gray-100 prose-strong:text-gray-100 prose-ul:text-gray-100 prose-ol:text-gray-100 prose-li:text-gray-100 prose-pre:bg-[#262626] prose-pre:text-sm prose-code:text-gray-100 prose-a:text-blue-400\">\n                        <ReactMarkdown>{message.content}</ReactMarkdown>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </AnimatePresence>\n\n          {/* Streaming Message */}\n          <AnimatePresence>\n            {isLoading && streamingContent && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0 }}\n                className=\"group\"\n              >\n                <div className=\"flex items-start gap-4 rounded-lg p-4 bg-[#262626]/30\">\n                  <div className=\"w-8 h-8 rounded-lg bg-blue-500/20 text-blue-400 flex items-center justify-center flex-shrink-0\">\n                    <Bot className=\"w-5 h-5\" />\n                  </div>\n                  <div className=\"flex-1 space-y-2 overflow-hidden\">\n                    <div className=\"text-sm font-medium text-gray-400\">Assistant</div>\n                    <div className=\"text-gray-100\">\n                      <div className=\"prose prose-invert max-w-none break-words prose-p:leading-relaxed prose-p:text-gray-100 prose-p:my-1 prose-headings:text-gray-100 prose-strong:text-gray-100 prose-ul:text-gray-100 prose-ol:text-gray-100 prose-li:text-gray-100 prose-pre:bg-[#262626] prose-pre:text-sm prose-code:text-gray-100 prose-a:text-blue-400\">\n                        <ReactMarkdown>{streamingContent}</ReactMarkdown>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          {/* Loading Indicator */}\n          <AnimatePresence>\n            {isLoading && !streamingContent && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0 }}\n                className=\"group\"\n              >\n                <div className=\"flex items-start gap-4 rounded-lg p-4\">\n                  <div className=\"w-8 h-8 rounded-lg bg-blue-500/20 text-blue-400 flex items-center justify-center flex-shrink-0\">\n                    <Loader2 className=\"w-5 h-5 animate-spin\" />\n                  </div>\n                  <div className=\"flex-1 space-y-2\">\n                    <div className=\"text-sm font-medium text-gray-400\">Assistant</div>\n                    <div className=\"flex items-center gap-2\">\n                      <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" />\n                      <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce delay-150\" />\n                      <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce delay-300\" />\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          <div ref={messagesEndRef} />\n        </div>\n      </div>\n\n      {/* Input Area */}\n      <div className=\"flex-none border-t border-[#262626]/50 bg-[#1A1A1A]/50 backdrop-blur-sm\">\n        <ChatInput \n          onSendMessage={onSendMessage} \n          isLoading={isLoading} \n          isReady={isReady}\n        />\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1076, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1082, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/components/chat/debug-panel.tsx"],"sourcesContent":["// a component that displays the raw messages in the chat\n\n'use client';\n\nimport { RawMessage } from '@/types/chat';\nimport { cn } from '@/lib/utils';\nimport { motion } from 'framer-motion';\nimport { Bug, ChevronRight } from 'lucide-react';\nimport { useMemo, useRef, useEffect } from 'react';\n\ninterface DebugPanelProps {\n  messages: RawMessage[];\n}\n\ninterface Metadata {\n  thread_id?: string;\n  langgraph_node?: string;\n  ls_model_name?: string;\n  ls_temperature?: number;\n  [key: string]: any;\n}\n\ninterface MessageData {\n  type?: string;\n  content?: string;\n  [key: string]: any;\n}\n\nconst messageVariants = {\n  hidden: { opacity: 0, x: 20 },\n  visible: { opacity: 1, x: 0 },\n  exit: { opacity: 0, x: 20 }\n};\n\nfunction consolidateStreamingContent(messages: RawMessage[]) {\n  const consolidated: RawMessage[] = [];\n  let currentContent = '';\n  let currentMetadata: Metadata | null = null;\n  let currentThreadId: string | null = null;\n  let lastEventType = '';\n\n  // Helper function to normalize content\n  const normalizeContent = (content: string) => {\n    return content.replace(/\\s+/g, ' ').trim();\n  };\n\n  // Helper function to flush current content\n  const flushCurrentContent = () => {\n    if (currentContent) {\n      consolidated.push({\n        event: 'messages',\n        data: [\n          { content: normalizeContent(currentContent), type: 'AIMessageChunk' },\n          currentMetadata\n        ]\n      });\n      currentContent = '';\n    }\n  };\n\n  messages.forEach((msg) => {\n    if (msg.event === 'metadata') {\n      const newThreadId = (msg.data as Metadata)?.thread_id;\n      if (newThreadId !== currentThreadId) {\n        // Flush any existing content before thread change\n        flushCurrentContent();\n        \n        // Add separator for new thread\n        if (consolidated.length > 0) {\n          consolidated.push({\n            event: 'separator',\n            data: { timestamp: new Date().toISOString() }\n          });\n        }\n        currentThreadId = newThreadId || null;\n      }\n      consolidated.push(msg);\n      lastEventType = 'metadata';\n    } else if (msg.event === 'messages') {\n      const messageData = msg.data[0] as MessageData;\n      const metadata = msg.data[1] as Metadata;\n      const threadId = metadata?.thread_id;\n      \n      if (messageData?.type === 'AIMessageChunk') {\n        // Handle streaming content\n        if (lastEventType !== 'streaming' || threadId !== currentThreadId) {\n          flushCurrentContent();\n          currentContent = messageData.content || '';\n          currentMetadata = metadata;\n        } else {\n          // Append to current streaming content with proper spacing\n          const newContent = messageData.content || '';\n          if (newContent) {\n            currentContent += (currentContent && !currentContent.endsWith(' ') ? ' ' : '') + newContent;\n          }\n          currentMetadata = metadata;\n        }\n        lastEventType = 'streaming';\n        currentThreadId = threadId || null;\n      } else {\n        // Handle non-streaming messages\n        flushCurrentContent();\n        consolidated.push({\n          event: 'messages',\n          data: [\n            { ...messageData, content: messageData.content ? normalizeContent(messageData.content) : '' },\n            metadata\n          ]\n        });\n        lastEventType = 'message';\n      }\n    }\n  });\n\n  // Flush any remaining content\n  flushCurrentContent();\n\n  return consolidated;\n}\n\nexport function DebugPanel({ messages }: DebugPanelProps) {\n  const consolidatedMessages = useMemo(() => consolidateStreamingContent(messages), [messages]);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [consolidatedMessages]);\n\n  return (\n    <div className=\"h-full flex flex-col bg-[#141414] border-l border-[#262626]/50\">\n      {/* Header */}\n      <div className=\"flex-none p-4 border-b border-[#262626]/50 bg-[#1A1A1A]/50\">\n        <div className=\"flex items-center gap-2 text-gray-400\">\n          <Bug className=\"w-4 h-4\" />\n          <span className=\"text-sm font-medium\">Debug Panel</span>\n        </div>\n      </div>\n\n      {/* Messages */}\n      <div className=\"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-[#262626] scrollbar-track-transparent p-4 space-y-4\">\n        {consolidatedMessages.length === 0 ? (\n          <div className=\"text-center text-gray-500 text-sm p-8\">\n            No messages to display\n          </div>\n        ) : (\n          consolidatedMessages.map((msg, idx) => (\n            <motion.div\n              key={idx}\n              variants={messageVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n              className=\"group\"\n            >\n              {msg.event === 'separator' ? (\n                <div className=\"flex items-center gap-4 py-2 opacity-50\">\n                  <div className=\"h-px flex-1 bg-[#262626]\" />\n                  <div className=\"text-xs text-gray-500\">New Interaction</div>\n                  <div className=\"h-px flex-1 bg-[#262626]\" />\n                </div>\n              ) : (\n                <div className=\"rounded-lg overflow-hidden border border-[#262626]/50 bg-[#1A1A1A]/30\">\n                  {/* Event Header */}\n                  <div className={cn(\n                    \"px-3 py-2 text-sm font-medium flex items-center gap-2\",\n                    msg.event === 'metadata' ? \"bg-purple-500/10 text-purple-300\" :\n                    msg.event === 'values' ? \"bg-green-500/10 text-green-300\" :\n                    \"bg-blue-500/10 text-blue-300\"\n                  )}>\n                    <ChevronRight className=\"w-4 h-4\" />\n                    <span>event: {msg.event}</span>\n                  </div>\n\n                  {/* Event Data */}\n                  <div className=\"p-3\">\n                    {msg.event === 'messages' ? (\n                      <div className=\"space-y-3\">\n                        {msg.data.map((item: any, mIdx: number) => (\n                          <div key={mIdx} className=\"space-y-2\">\n                            {item.type && (\n                              <div className=\"text-yellow-300/90 text-sm font-medium\">\n                                Type: {item.type}\n                              </div>\n                            )}\n                            {item.content && (\n                              <div className=\"text-gray-300 text-sm break-words pl-2\">\n                                Content: {item.content}\n                              </div>\n                            )}\n                            {/* Show essential metadata only */}\n                            {mIdx === 1 && item && (\n                              <div className=\"text-gray-400 text-xs font-mono bg-[#262626]/30 p-2 rounded mt-2\">\n                                <div>Node: {item.langgraph_node}</div>\n                                <div>Model: {item.ls_model_name}</div>\n                                <div>Temperature: {item.ls_temperature}</div>\n                              </div>\n                            )}\n                          </div>\n                        ))}\n                      </div>\n                    ) : (\n                      <pre className=\"text-gray-300 text-sm whitespace-pre-wrap overflow-x-auto font-mono\">\n                        {JSON.stringify(msg.data, null, 2)}\n                      </pre>\n                    )}\n                  </div>\n                </div>\n              )}\n            </motion.div>\n          ))\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1461, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/components/chat/chat.tsx"],"sourcesContent":["// component for the chat interface\n\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useChat } from '@/contexts/ChatContext';\nimport { useThread } from '@/contexts/ThreadContext';\nimport { useChatActions } from '@/hooks/useChatActions';\nimport { ChatThread } from './chat-thread';\nimport { ChatWindow } from './chat-window';\nimport { DebugPanel } from './debug-panel';\nimport { Menu, X, Bug } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nconst springTransition = {\n  type: \"spring\",\n  stiffness: 300,\n  damping: 30\n};\n\nexport function Chat() {\n  const { messages, isLoading, rawMessages } = useChat();\n  const { threads, currentThreadId, createNewThread, loadThreadHistory, setCurrentThreadId } = useThread();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isDebugOpen, setIsDebugOpen] = useState(false);\n\n  // Initialize chat actions with current thread\n  const { sendMessage, ready } = useChatActions({\n    threadId: currentThreadId || undefined,\n  });\n\n  const handleNewChat = async () => {\n    try {\n      const newThreadId = await createNewThread();\n      setCurrentThreadId(newThreadId);\n      await loadThreadHistory(newThreadId);\n    } catch (error) {\n      console.error('Error creating new chat:', error);\n    }\n  };\n\n  const handleSelectThread = async (threadId: string) => {\n    try {\n      setCurrentThreadId(threadId);\n      await loadThreadHistory(threadId);\n    } catch (error) {\n      console.error('Error loading thread:', error);\n    }\n  };\n\n  // Load thread history when currentThreadId changes\n  useEffect(() => {\n    if (currentThreadId) {\n      loadThreadHistory(currentThreadId).catch(console.error);\n    }\n  }, [currentThreadId, loadThreadHistory]);\n\n  return (\n    <div className=\"flex h-screen bg-[#1A1A1A] relative overflow-hidden\">\n      {/* Backdrop for mobile sidebar */}\n      <AnimatePresence>\n        {isSidebarOpen && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 0.4 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-black md:hidden z-20\"\n            onClick={() => setIsSidebarOpen(false)}\n          />\n        )}\n      </AnimatePresence>\n\n      {/* Sidebar */}\n      <motion.div\n        initial={false}\n        animate={{\n          width: isSidebarOpen ? '320px' : '0px',\n          x: isSidebarOpen ? 0 : -320\n        }}\n        transition={springTransition}\n        className=\"fixed md:relative h-full z-30 overflow-hidden\"\n      >\n        <ChatThread\n          threads={threads}\n          onNewChat={handleNewChat}\n          onSelectThread={handleSelectThread}\n          activeThreadId={currentThreadId || undefined}\n        />\n      </motion.div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 flex flex-col min-w-0 h-screen relative\">\n        {/* Header */}\n        <div className=\"flex-none h-14 border-b border-[#262626] bg-[#1A1A1A]/80 backdrop-blur-md supports-[backdrop-filter]:bg-[#1A1A1A]/60 z-10\">\n          <div className=\"max-w-screen-2xl mx-auto px-4 h-full flex items-center justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <button\n                onClick={() => setIsSidebarOpen(!isSidebarOpen)}\n                className=\"p-2 hover:bg-[#262626] rounded-lg transition-all duration-200 ease-in-out\"\n              >\n                <motion.div\n                  animate={{ rotate: isSidebarOpen ? 0 : 180 }}\n                  transition={{ duration: 0.2 }}\n                >\n                  {isSidebarOpen ? <X className=\"w-5 h-5 text-gray-400\" /> : <Menu className=\"w-5 h-5 text-gray-400\" />}\n                </motion.div>\n              </button>\n              <div className=\"text-gray-200 font-medium\">\n                {currentThreadId ? threads.find(t => t.id === currentThreadId)?.title : 'New Chat'}\n              </div>\n            </div>\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={() => setIsDebugOpen(!isDebugOpen)}\n              className=\"px-3 py-1.5 text-sm text-gray-400 hover:bg-[#262626] rounded-lg transition-colors flex items-center gap-2\"\n            >\n              <Bug className=\"w-4 h-4\" />\n              <span className=\"hidden sm:inline\">{isDebugOpen ? 'Hide Debug' : 'Show Debug'}</span>\n            </motion.button>\n          </div>\n        </div>\n\n        {/* Chat and Debug Panel Container */}\n        <motion.div \n          className=\"flex-1 overflow-hidden flex\"\n          layout\n        >\n          {/* Chat Window */}\n          <motion.div\n            layout\n            className=\"flex-1 overflow-hidden\"\n            animate={{\n              width: isDebugOpen ? '50%' : '100%'\n            }}\n            transition={springTransition}\n          >\n            <ChatWindow\n              messages={messages}\n              isLoading={isLoading}\n              onSendMessage={sendMessage}\n              isReady={ready}\n            />\n          </motion.div>\n\n          {/* Debug Panel */}\n          <motion.div\n            layout\n            initial={{ width: 0 }}\n            animate={{\n              width: isDebugOpen ? '50%' : 0\n            }}\n            transition={springTransition}\n            className=\"overflow-hidden\"\n          >\n            {isDebugOpen && <DebugPanel messages={rawMessages} />}\n          </motion.div>\n        </motion.div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1762, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}