{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/app/api/chat/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { StreamPayload } from '@/types/chat';\n\nexport async function POST(req: NextRequest) {\n  try {\n    const threadId = req.nextUrl.searchParams.get('threadId');\n    if (!threadId) {\n      return NextResponse.json({ error: 'Thread ID is required' }, { status: 400 });\n    }\n\n    const payload = await req.json() as StreamPayload;\n    \n    // Forward the request to your Python backend\n    const response = await fetch('http://localhost:8000/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        ...payload,\n        thread_id: threadId\n      })\n    });\n\n    // Create a TransformStream to modify the response\n    const transformStream = new TransformStream({\n      transform(chunk, controller) {\n        // Forward the chunk as is\n        controller.enqueue(chunk);\n      },\n    });\n\n    // Pipe the response through our transform stream\n    return new Response(\n      response.body?.pipeThrough(transformStream),\n      {\n        headers: {\n          'Content-Type': 'text/event-stream',\n          'Cache-Control': 'no-cache',\n          'Connection': 'keep-alive',\n        },\n      }\n    );\n\n  } catch (error) {\n    console.error('Error in chat route:', error);\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\n  }\n} "],"names":[],"mappings":";;;AAAA;;AAGO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,WAAW,IAAI,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC;QAC9C,IAAI,CAAC,UAAU;YACb,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAwB,GAAG;gBAAE,QAAQ;YAAI;QAC7E;QAEA,MAAM,UAAU,MAAM,IAAI,IAAI;QAE9B,6CAA6C;QAC7C,MAAM,WAAW,MAAM,MAAM,8BAA8B;YACzD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB,GAAG,OAAO;gBACV,WAAW;YACb;QACF;QAEA,kDAAkD;QAClD,MAAM,kBAAkB,IAAI,gBAAgB;YAC1C,WAAU,KAAK,EAAE,UAAU;gBACzB,0BAA0B;gBAC1B,WAAW,OAAO,CAAC;YACrB;QACF;QAEA,iDAAiD;QACjD,OAAO,IAAI,SACT,SAAS,IAAI,EAAE,YAAY,kBAC3B;YACE,SAAS;gBACP,gBAAgB;gBAChB,iBAAiB;gBACjB,cAAc;YAChB;QACF;IAGJ,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}