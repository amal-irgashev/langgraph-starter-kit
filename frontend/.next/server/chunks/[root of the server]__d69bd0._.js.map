{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/sherahmedov/Dev/Portfolio/langgraph-starter-kit/frontend/app/api/threads/%5BthreadId%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\n// GET /api/threads/[threadId] - Get thread summary\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: { threadId: string } }\n) {\n  try {\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_API_URL}/threads/${params.threadId}/summary`,\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch thread summary');\n    }\n\n    const data = await response.json();\n    return NextResponse.json(data);\n  } catch (error) {\n    console.error('Error fetching thread summary:', error);\n    return NextResponse.json(\n      { error: 'Failed to fetch thread summary' },\n      { status: 500 }\n    );\n  }\n}\n\n// DELETE /api/threads/[threadId] - Delete a thread\nexport async function DELETE(\n  request: NextRequest,\n  { params }: { params: { threadId: string } }\n) {\n  try {\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_API_URL}/threads/${params.threadId}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error('Failed to delete thread');\n    }\n\n    return NextResponse.json({ success: true });\n  } catch (error) {\n    console.error('Error deleting thread:', error);\n    return NextResponse.json(\n      { error: 'Failed to delete thread' },\n      { status: 500 }\n    );\n  }\n} "],"names":[],"mappings":";;;;AAAA;;AAGO,eAAe,IACpB,OAAoB,EACpB,EAAE,MAAM,EAAoC;IAE5C,IAAI;QACF,MAAM,WAAW,MAAM,MACrB,6DAAmC,SAAS,EAAE,OAAO,QAAQ,CAAC,QAAQ,CAAC,EACvE;YACE,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;QACF;QAGF,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAiC,GAC1C;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,OACpB,OAAoB,EACpB,EAAE,MAAM,EAAoC;IAE5C,IAAI;QACF,MAAM,WAAW,MAAM,MACrB,6DAAmC,SAAS,EAAE,OAAO,QAAQ,EAAE,EAC/D;YACE,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;QACF;QAGF,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA0B,GACnC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}